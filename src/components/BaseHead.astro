---
/*
 * MIT License
 *
 * Copyright (c) 2024 Lina (Lexedia) L.
 */

import '@/styles/global'
import { siteConfig } from '../consts.ts'
import type { ImageMetadata } from 'astro'

interface Props {
  title: string
  description: string
  image?: ImageMetadata | undefined
  articleDate?: string | undefined
  displayLargeImage?: boolean | undefined
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site)

const {
  title, description, articleDate, image, displayLargeImage = false,
} = Astro.props
const titleSeparator = '|'
const siteTitle = `${title} ${titleSeparator} ${siteConfig.title}`
---

<meta charset='utf-8' />
<meta name='viewport' content='width=device-width,initial-scale=1' />
<link rel='icon' type='image/svg+xml' href='/favicon.png' />
<meta name='generator' content={Astro.generator} />
<link rel='canonical' href={canonicalURL} />
<title>{siteTitle}</title>
<meta name='title' content={title} />
<meta name='description' content={description} />
<meta name='author' content={siteConfig.profile.author} />
<meta property='og:type' content='website' />
<meta property='og:url' content={Astro.url} />
<meta property='og:title' content={title} />
<meta property='og:description' content={description} />
{image && <meta property='og:image' content={image.src} />}

{
  articleDate && (
    <>
      <meta property='article:author' content={siteConfig.profile.author} />
      <meta property='article:published_time' content={articleDate} />
    </>
  )
}

{displayLargeImage && <meta property='twitter:card' content='summary_large_image' />}
<meta property='twitter:url' content={Astro.url} />
<meta property='twitter:title' content={title} />
<meta property='twitter:description' content={description} />
{image && <meta property='twitter:image' content={image.src} />}
